{
    "integrations": {
        "grafana": [
            {
                "name": "grafana",
                "grafanaServer": "http://127.0.0.1:3000",
                "grafanaOrgId": "1",
                "grafanaToken": "sql",
                "grafanaDashboard": "/d/jmeter-results/jmeter-test-results",
                "grafanaDashRenderPath": "/render/d-solo/jmeter-results/jmeter-test-results",
                "grafanaDashRenderCompPath": "/render/d-solo/jmeter-comp/jmeter-load-test-comparison"
            }
        ],
        "influxdb": [
            {
                "name": "influxdb",
                "influxdbUrl": "http://localhost:8086",
                "influxdbOrg": "EPAM",
                "influxdbToken": "ze_abIu0GMUPabL4daYBuRxsDEeK3gIdui_y6ZN5l7j3Mu2yNkkIxgYRoSBETsu6e3lHHw42iuZ6eTiWiCOmWQ==",
                "influxdbTestIdTag": "runId",
                "influxdbTimeout": "60000",
                "influxdbBucket": "jmeter",
                "influxdbMeasurement": "requestsRaw",
                "influxdbField": "responseTime",
                "isDefault": "y"
            }
        ],
        "azure": [
            {
                "name": "azure",
                "personalAccessToken": "vbl6cy3ubqicbujbjita532k2swdp53l6sdb6woytwucbahc5iya",
                "wikiOrganizationUrl": "https://dev.azure.com/UladzislauShklianik",
                "wikiProject": "DEMOPIPE",
                "wikiIdentifier": "DEMOPIPE.wiki",
                "wikiPathToReport": "/DEMO-TESTS/JMETER-REPORTS",
                "appInsighsLogsServer": "v",
                "appInsighsAppId": "v",
                "appInsighsApiKey": "v"
            }
        ],
        "conflwiki": [
            {
                "name": "conflwiki",
                "username": "vladnnen@gmail.com",
                "personalAccessToken": "sql",
                "wikiOrganizationUrl": "https://easyreport.atlassian.net/",
                "wikiParentId": "557057",
                "wikiSpaceKey": "MFS"
            }
        ],
        "confljira": [
            {
                "name": "jira",
                "email": "Auto_EPM-HIRE_JIRA@epam.com",
                "password": "ywEdT5J5NqtcqserezfMNtyJv",
                "jiraOrganizationUrl": "https://jira-api.epam.com/jira",
                "project": "EPMHIRE",
                "epic": "EPMHIRE-13844"
            }
        ]
    },
    "flowConfigs": [
        {
            "graphs": [
                {
                    "position": 0,
                    "name": "Requests Per Second VS Transactions Per Second"
                },
                {
                    "position": 1,
                    "name": "Requests Per Second VS Transactions Per Second2"
                }
            ],
            "name": "demo-az",
            "influxdbName": "influxdb2",
            "grafanaName": "grafana",
            "outputName": "conflwiki",
            "header": "##Status: `To fill in manually`\r\n\r\n[[_TOC_]]\r\n\r\n# Summary\r\n - To fill in manually\r\n\r\n# Test settings\r\n|vUsers | Duration | Start time | End time | Comments | Grafana dashboard |\r\n|--|--|--|--|--|--|--|--|\r\n|${current_vusers}|${current_duration}|${current_startTime}|${current_endTime}| Current test | [Grafana link](${current_grafanaLink}) |\r\n",
            "footer": "Some footer"
        },
        {
            "graphs": [
                {
                    "position": 0,
                    "name": "Requests Per Second VS Transactions Per Second"
                },
                {
                    "position": 1,
                    "name": "Requests Per Second VS Transactions Per Second2"
                }
            ],
            "name": "demo",
            "influxdbName": "influxdb",
            "grafanaName": "grafana",
            "outputName": "conflwiki",
            "header": "<p>\r\n<strong>Status: </strong><ac:structured-macro ac:name=\"status\" ac:schema-version=\"1\" ac:macro-id=\"24e56570-a966-4ad8-bfec-097d77c7ae97\"><ac:parameter ac:name=\"title\">to fill manually</ac:parameter><ac:parameter ac:name=\"colour\">Purple</ac:parameter></ac:structured-macro> \r\n</p><ac:structured-macro ac:name=\"toc\" ac:schema-version=\"1\" data-layout=\"default\" ac:local-id=\"8012cd55-c6af-44b2-8132-8bba06ca1011\" ac:macro-id=\"c649966e596c64cce47c4632dab38fbf\"><ac:parameter ac:name=\"minLevel\">1</ac:parameter><ac:parameter ac:name=\"maxLevel\">7</ac:parameter></ac:structured-macro>\r\n<h1>Summary:</h1>\r\n<ul>\r\n<li>\r\n<p>To fill manually</p></li></ul>\r\n<h1>Test settings:</h1>\r\n<table data-layout=\"default\" ac:local-id=\"ea9787c3-d143-41ff-a4ea-8f27452a835a\"><colgroup><col style=\"width: 124.0px;\" /><col style=\"width: 124.0px;\" /><col style=\"width: 123.0px;\" /><col style=\"width: 125.0px;\" /><col style=\"width: 124.0px;\" /><col style=\"width: 140.0px;\" /></colgroup>\r\n<tbody>\r\n<tr>\r\n<th>\r\n<p><strong>vUSERS</strong></p></th>\r\n<th>\r\n<p><strong>Duration</strong></p></th>\r\n<th>\r\n<p><strong>Start time</strong></p></th>\r\n<th>\r\n<p><strong>End time</strong></p></th>\r\n<th>\r\n<p><strong>Comments</strong></p></th>\r\n<th>\r\n<p><strong>Grafana link</strong></p></th></tr>\r\n<tr>\r\n<td>\r\n<p>${current_vusers}</p></td>\r\n<td>\r\n<p>${current_duration}</p></td>\r\n<td>\r\n<p>${current_startTime}</p></td>\r\n<td>\r\n<p>${current_endTime}</p></td>\r\n<td>\r\n<p>Current test</p></td>\r\n<td>\r\n<p><a href=\"${current_grafanaLink}\">Grafana link</a></p></td></tr></tbody></table>",
            "footer": ""
        },
        {
            "graphs": [],
            "name": "demo-jira",
            "influxdbName": "influxdb",
            "grafanaName": "grafana",
            "outputName": "jira",
            "header": "*1. Introduction*\r\n\r\nThe goals of this testing were: we need to know the *capacity* and *stability* of the system, {*}response times{*}, and what the *bottleneck* is.\r\n\r\nMain Grafana dashboard: [link|https://grafana.aws.epm-hire.projects.epam.com/d/tests_logs/tests-logs?orgId=1]\r\n|| ||Ramp-up||Fixed load||Longevity||Client-side||\r\n|Grafana test results|[link|https://grafana.aws.epm-hire.projects.epam.com/d/jmeter_results/jmeter-test-results?orgId=1&from=1674663738546&to=1674667353007&var-aggregation=60&var-sampleType=transaction&var-runId=v0.3.135@20230125-1622&var-testName=ramp_up]|[link|https://grafana.aws.epm-hire.projects.epam.com/d/jmeter_results/jmeter-test-results?orgId=1&from=1674737292040&to=1674740894226&var-aggregation=60&var-sampleType=transaction&var-runId=v0.3.135@20230126-1248&var-testName=fix_load]|[link|https://grafana.aws.epm-hire.projects.epam.com/d/jmeter_results/jmeter-test-results?orgId=1&from=1674672574400&to=1674715774752&var-aggregation=600&var-sampleType=transaction&var-runId=v0.3.135@20230125-1849&var-testName=longevity&var-flask_ip=https:%2F%2F10.68.63.115:5000%2Fbaseline_jmeter&var-namespace=stress-hit-web&var-node=All&var-instance=All&var-instance2=All&var-jmeter_bucket=jmeter]|[link|https://grafana.aws.epm-hire.projects.epam.com/d/lighthouse_results/lighthouse-test-results?orgId=1&from=1674650439565&to=1674660151124&var-build=2023-01-25_12:40:15@v0.3.135]|\r\n|Grafana compare|[link|https://grafana.aws.epm-hire.projects.epam.com/d/jmeter_comparison/jmeter-tests-comparison?orgId=1&from=1674663738546&to=1674667353007&var-sampleType=transaction&var-current_runId=v0.3.135@20230125-1622&var-testName=ramp_up]|[link|https://grafana.aws.epm-hire.projects.epam.com/d/jmeter_comparison/jmeter-tests-comparison?orgId=1&from=1674737292040&to=1674740894226&var-sampleType=transaction&var-current_runId=v0.3.135@20230126-1248&var-testName=fix_load]|[link|https://grafana.aws.epm-hire.projects.epam.com/d/jmeter_comparison/jmeter-tests-comparison?orgId=1&from=1674672574400&to=1674715774752&var-sampleType=transaction&var-current_runId=v0.3.135@20230125-1849&var-testName=longevity&var-baseline_runId=v0.3.133-134@20230117-1500&var-aggregation=600]|[link|https://grafana.aws.epm-hire.projects.epam.com/d/lighthouse_comparison/lighthouse-tests-comparison?orgId=1&from=1674650439565&to=1674660151124&var-current_build=2023-01-25_12:40:15@v0.3.135&var-domain=stress-hit-web.aws.epm-hire.projects.epam.com]|\r\n\r\n*2. Summary*\r\n\r\n*Ramp-up*\r\n\r\nThe saturation point was reached on 10 transactions/s (!126 virtual users). The capacity of the system remained at the same level.\r\n\r\nThe bottleneck is the database, which at the saturation point stops responding to requests from the hit web.\r\n\r\nDetails are provided below.\r\n\r\n*Fixed-load*\r\n\r\nThe overall response time slightly decreased.\r\n\r\nFor most transactions, the response time remained at the same level or slightly decreased.\r\n\r\nTransactions related to ADD and DELETE TIME SLOT, SCHEDULE INTERVIEW, RESCHEDULE INTERVIEW, EDIT FEEDBACK, REQUEST FOR INTERVIEW DASHBOARD, INTERVIEWERS DASHBOARD, FILTERING, FILTER BY AVAILABILITY, EXPORT CSV had a long response time (more than 2s).\r\n\r\nDetails are provided below.\r\n\r\n*Client-side*\r\n\r\nResponse times remained at the same level or slightly decreased.\r\n\r\n*Longevity*\r\n\r\nThroughput and response time were stable throughout the test.\r\n\r\nAll processors worked quite stably.\r\n\r\nMemory usage was stable throughout the test.\r\n\r\nThe network was stable throughout the test.\r\n\r\nDetails are provided below.\r\n\r\n*3. Test scenario*\r\n||*Hiring managers (15%)*||*Recruiters (35%)*||*Recruiters and General users (50%)*||\r\n|1. *Login* (100% of users take this step)|1. *Login* (100% of users take this step)|1. *Login* recruiters(100% of users take this step)|\r\n|2. *Interview all dashboard* (100%)|2. *Interview all dashboard* (100%) * Filtering (100%)|2. *Open Interview all dashboard* (100%)|\r\n|3. *Send test* (100%)\r\n - Edit and save test\r\n - Share interview|3. *Schedule interview* (100%)\r\n - Edit and save interview (100%)\r\n - Join and finish interview (100%)\r\n - Save results (100%)\r\n - Edit and save feedback (100%)\r\n - Refuse feedback (5%)\r\n - Edit and save candidate feedback (5%)\r\n - Reschedule interview (5%)|3. *Schedule interview* (500%) * Edit and save interview (100%)\r\n * Edit and save preview feedback (100%)\r\n * Edit interview (200%)|\r\n|4. *Candidate profile* (50%) - Add profile comment (50%)|4. *Log interview* (200%)\r\n - Edit and save interview (200%)\r\n - Edit and save feedback (200%)\r\n - Clone interview (5%)|4. *Logout* (100%)|\r\n|5. *My profile* (50%) - Adding time slot (50%)\r\n - Deleting time slot (50%)\r\n - Settings (50%)\r\n - Communication log (50%)\r\n - Change log (50%)|5. *Request for interview dashboard* (300%) * Filtering (60%)|5. *Login* general users(100%)|\r\n|6. *Feedback templates dashboard* (10%) - Open feedback template (10%)|6. *Request interview* (240%) * Edit and save request (240%)\r\n * Edit request (240%)|6. *Open Interview all dashboard* (100%)|\r\n|7. *Notifications* (10%) * Edit and save notifications (10%)|7. *Interviewers dashboard* (50%)\r\n - Filtering (50%)\r\n - Filter by availability (25%)\r\n - Export to csv (5%)|7. *Join interview* (100%) - Finish interview (100%)\r\n - Save results (100%)\r\n - Edit and save feedback (100%)\r\n - Rate feedback (50%)\r\n - Interview details (5%)\r\n - Change log (5%)\r\n - Export feedback (5%)\r\n - Cancel interview (5%)|\r\n\r\n*4. Tests configuration*\r\n||*\u2116*||*Test type*||*vUsers*||*Duration*||*Ramp-up period*||*Think times*||*Goal*||\r\n|1|Ramp-up|200|1 hour|1 hour|5-15 sec.|Determine saturation point and find bottleneck|\r\n|2|Fixed-load|66|1 hour|10 minutes|5-15 sec.|Estimate response times|\r\n|3|Longevity|66|6 hour|10 minutes|5-15 sec.|Evaluate stability and identify memory leaks.|\r\n\r\n*5. Environment description*\r\n|| ||hit-web||hit-data||hit-els||\r\n|AWS|t3.xlarge|t3.xlarge|t3.xlarge|\r\n|CPU|4|4|4|\r\n|Memory|16|16|16|\r\n\r\n*6. Ramp-up test results*\r\n\r\n*6.1 Total Throughput & Threads*\r\n\r\n*image*\r\n\r\nTotal virtual users: 200 (Hiring managers: 30, Recruiters: 70, Recruiters + General users: 100). The saturation point was reached on 10 transactions/s (!126 virtual users). As you can see, the capacity of the system remained at the same level.. After that, the number of active users continued to grow, but the throughput stopped growing, the response time began to increase dramatically, and the load on the hit-web and hit-data processors reached a critical level.  \r\n\r\n*6.2 Response Times*\r\n\r\n*image*\r\n\r\nAfter the saturation point, the response time for all transactions increased dramatically. \r\n\r\n*6.3 CPU usage*\r\n\r\n*image*\r\n\r\nThe elasticsearch processor was loaded within acceptable limit, while the web server and database processors were loaded to critical values. \r\n\r\n+Notes: The processor cannot be loaded up to 100 percent because nodes have requests from other namespaces.+\r\n\r\n*6.4 Memory usage*\r\n\r\n*image*\r\n\r\nAfter the saturation point, there is a sharp increase in the memory usage of the hit web.\r\n\r\n*6.5 Bottleneck*\r\n\r\n*image*\r\n\r\nAt the saturation point, there is a sharp increase in the number of connections to the database, as the database stops responding to the hit web.\r\n\r\n*7 Fixed-load test results*\r\n\r\n*7.1* *Throughput*\r\n\r\n*image*\r\n\r\nTotal virtual users: 66 (Hiring managers: 10, Recruiters: 23, Recruiters + General users: 33). The throughput was stable throughout the test.\r\n\r\n*7.2* *Total stats*\r\n\r\n*image*\r\n\r\n*image*\r\n\r\nThe overall response time slightly decreased.\r\n\r\n*7.3 Response Times*\r\n\r\nHiring managers thread group\r\n\r\n*image*\r\n\r\nRecruiters thread group\r\n\r\n*image*\r\n\r\n*image*\r\n\r\nRecruiters & General users thread group\r\n\r\n*image*\r\n\r\nFor most transactions, the response time remained at the same level or decreased.\r\n\r\nAs you can see from the table, transactions related to ADD and DELETE TIME SLOT, SCHEDULE INTERVIEW, RESCHEDULE INTERVIEW, EDIT FEEDBACK, REQUEST FOR INTERVIEW DASHBOARD, INTERVIEWERS DASHBOARD, FILTERING, FILTER BY AVAILABILITY, EXPORT CSV had a long response time (more than 2s).\r\n\r\n*7.4 Client-side*\r\n\r\n*image*\r\n\r\n*image*\r\n\r\n*8 Longevity test results*\r\n\r\n*8.1 Total Throughput & Threads*\r\n\r\n*image*\r\n\r\nTotal virtual users: 66 (Hiring managers: 10, Recruiters: 23, Recruiters + General users: 33). Throughput was stable throughout the test. There were three drops in throughput during the backup job.\r\n\r\n*8.2 Response time*\r\n\r\n*image*\r\n\r\n*image*\r\n\r\n*8.3* *CPU usage*\r\n\r\n*image*\r\n\r\nAll processors worked quite stably. Spike was because of a working job\r\n\r\n*8.4 Memory usage*\r\n\r\n*image*\r\n\r\nMemory usage was stable throughout the test.\r\n\r\n*8.5 Network usage*\r\n\r\n*image*\r\n The network was stable throughout the test.",
            "footer": ""
        }
    ],
    "graphs": [
        {
            "name": "Requests Per Second VS Transactions Per Second",
            "viewPanel": "91",
            "dashId": "/render/d-solo/jmeter-results/jmeter-test-results",
            "filename": "requests-per-second",
            "width": "1000",
            "height": "400"
        },
        {
            "name": "Requests Per Second VS Transactions Per Second2",
            "viewPanel": "91",
            "dashId": "/render/d-solo/jmeter-results/jmeter-test-results",
            "filename": "requests-per-second",
            "width": "1000",
            "height": "400"
        },
        {
            "name": "scsdc",
            "viewPanel": "",
            "dashId": "",
            "fileName": "",
            "width": "",
            "height": ""
        }
    ]
}